
resources:
..> https://blog.algomaster.io/
..> 


redis : 
.> the main application of the redis is the  caching of the data.{ for faster recovery. }
.> session storge :  redi sis used to store teh session id , 
note: the session data in the redis will be lost when the redis server is re-started , web browser is closed.

.> redis also supports the persistent storage of teh data { permanent storege } using the snapshopt, AOF, 
IN  this case te data will be stored in to teh disk and reloaded in to the memory when aware it needed { by the event of the re-start} .

..> Distributed looks : redis acts has the automic looks 
Distributed Locks in Redis mean using Redis to make sure that when multiple computers are working together,
only one computer can access/modify a resource at a time, safely and fast.

Redis can:

#) Create a lock using a simple key (example: "lock:account123").
Set an expiration (if something goes wrong, the lock will automatically expire).
Check if lock is held before allowing work.

#) Imagine you and your friend are editing the same document at the same time.
You lock the document when you are editing.
Until you finish and unlock it, your friend cannot edit.
After you unlock, your friend can edit.
Now imagine thousands of users and many servers are trying to edit the same data.
You need a central system to manage locks â€” Redis is perfect for this!


.> rate limiter : redis even atcs has the rate limiter

when the user logs in then his ip will ip made to set has te key , and when user keeps, on requesting 
then his ip address will be incremented and come paried to the default  rate set inside it , allow the request to reach teh DB only teh rate limits is with in the
controls, otherwise rejects here. and here teh key also set to expire after specfic 

.> gaming Leaderboard:j




