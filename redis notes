
resources:
..> https://blog.algomaster.io/
..> 


Redis-server is the process or daemon that runs in teh background and listens for client connections.
Its is tha main component of redis, responsible for storing and managing data in mempry.

what is redis-cli:
The redis commands line interface(redis-cli) is a terminal program used to send commands to and read
to read replies from teh redis server.


what redisInsifgt:
redisInsight combines a graphical user interface with Redis cCLI to let you work with any Redis deployment.

KEYS IN REDIS:
Redis keys are binary safe, this means that you can use any binary sequence as a key,from a string like 'foo'
to teh content of a JPEG file.
.> the empty string also a valid key.
.> the maximum allowed key size is 512MB.
.> key should not be very long or very short.

strings:
 Redis strings are teh most basic redis data types, representing a sequences of bystes.

lists:
Redis lists are lists of strings sorted by insertion order.

set:
Redis sets are unordered collections of unique strings that act liek the sets from python, javs etc.

sorted sets:
Redis sorted sets are collections of unique strings that maintain order by each string's associated score

hash's:
redis hashes are record types models as collections of field-value pairs.Hashes are handy to represent objects.

Strams:
A redis stream is a data structure that acts like an append-only log.
Streams help record events in teh order they occur and then syndicate them for processing.


Basic Cnfiguration Commands:

config get * - This command is used to get all config settings;
config get requirepass- This command is used to get specific config setting.
config set requirepass value- This command is used to set specific config setting.

There is also a config file etc/redis/redis.conf which can be used to get all configurations and set configurations.


redis : 
.> the main application of the redis is the  caching of the data.{ for faster recovery. }
.> session storge :  redi sis used to store teh session id , 
note: the session data in the redis will be lost when the redis server is re-started , web browser is closed.

.> redis also supports the persistent storage of teh data { permanent storege } using the snapshopt, AOF, 
IN  this case te data will be stored in to teh disk and reloaded in to the memory when aware it needed { by the event of the re-start} .

..> Distributed looks : redis acts has the automic looks 
Distributed Locks in Redis mean using Redis to make sure that when multiple computers are working together,
only one computer can access/modify a resource at a time, safely and fast.

Redis can:

#) Create a lock using a simple key (example: "lock:account123").
Set an expiration (if something goes wrong, the lock will automatically expire).
Check if lock is held before allowing work.

#) Imagine you and your friend are editing the same document at the same time.
You lock the document when you are editing.
Until you finish and unlock it, your friend cannot edit.
After you unlock, your friend can edit.
Now imagine thousands of users and many servers are trying to edit the same data.
You need a central system to manage locks — Redis is perfect for this!


.> rate limiter : redis even atcs has the rate limiter

when the user logs in then his ip will ip made to set has te key , and when user keeps, on requesting 
then his ip address will be incremented and come paried to the default  rate set inside it , allow the request to reach teh DB only teh rate limits is with in the
controls, otherwise rejects here. and here teh key also set to expire after specfic 

.> gaming Leaderboard:j


redis snapshoots  concepts:

SNAP in Redis usually means Snapshot.
(Full name = RDB Snapshot.)

..> Snapshot = Saving a copy of your Redis data into a file.
So even if the server crashes or shuts down, you won't lose your data — because Redis saved a snapshot (copy) safely.


Term	                Meaning
RDB	                  Redis Database file (example: dump.rdb)
Snapshot	            A full copy of current data saved at a specific time
Persistence	          Keeping your in-memory (RAM) data safe on disk
RDB Snapshotting	    Redis will create .rdb file (compressed) and save your data periodically


Its use cases are here :

Redis saves a .rdb file
1) This .rdb file can be loaded back later
2) Safe even if server restarts/crashes


note point:
--------------- >
.> Redis automatically saves snapshots based on rules you set in your redis.conf file.

some redis commands are :
=============================== >
Commands:
Command	What it does
SAVE	Immediately save a snapshot (synchronous, blocking)
BGSAVE	Background Save (non-blocking, Redis still working)
LASTSAVE	See the last time Redis created a snapshot
CONFIG SET save	Set the rules for automatic snapshot saving
CONFIG GET dir	See where snapshots are being saved
CONFIG GET dbfilename	See the filename of the snapshot (default: dump.rdb)

ex: 
127.0.0.1:6379> SAVE
# Blocks Redis, saves snapshot immediately

127.0.0.1:6379> BGSAVE
# Starts saving in background, Redis keeps working

127.0.0.1:6379> LASTSAVE
# Shows last snapshot time (in UNIX timestamp)


Where is the Snapshot saved?

Linux: /var/lib/redis/dump.rdb
Windows: Where your Redis server is installed (in the bin folder)
You can change this using redis.conf settings:
dir /path/to/save
dbfilename mydata.rdb


ex: scenario 
Sachin is running a Redis server.
Every 5 minutes, if at least 10 changes happen, Redis automatically saves a snapshot to dump.rdb.
Tomorrow, Sachin's server crashes suddenly.
No problem — Sachin restarts Redis, and Redis loads the last snapshot automatically!


